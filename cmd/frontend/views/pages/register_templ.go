// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.857
package pages

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func Register() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"container my-5\"><div class=\"row justify-content-center\"><div class=\"col-md-7 col-lg-5\"><div class=\"card shadow border-0 rounded-4\"><div class=\"card-body p-4\"><h2 class=\"card-title text-center mb-4\">Register</h2><!-- Container pentru mesaje de eroare --><div id=\"register-error\"></div><form id=\"registerForm\" class=\"needs-validation\" novalidate onsubmit=\"return submitRegisterForm(event)\"><div class=\"row g-3\"><!-- Nume și Prenume în același rând --><div class=\"col-md-6\"><label for=\"firstName\" class=\"form-label\">First Name</label> <input type=\"text\" name=\"first_name\" class=\"form-control rounded-3\" id=\"firstName\" placeholder=\"Your first name\" required><div class=\"invalid-feedback\">First name is required.</div></div><div class=\"col-md-6\"><label for=\"lastName\" class=\"form-label\">Last Name</label> <input type=\"text\" name=\"last_name\" class=\"form-control rounded-3\" id=\"lastName\" placeholder=\"Your last name\" required><div class=\"invalid-feedback\">Last name is required.</div></div><!-- Email pe tot rândul --><div class=\"col-12\"><label for=\"email\" class=\"form-label\">Email address</label> <input type=\"email\" name=\"email\" class=\"form-control rounded-3\" id=\"email\" placeholder=\"you@example.com\" required><div class=\"invalid-feedback\">Please enter a valid email address.</div></div><!-- Parola și Confirmare pe tot rândul --><div class=\"col-12\"><label for=\"password\" class=\"form-label\">Password</label> <input type=\"password\" name=\"password\" class=\"form-control rounded-3\" id=\"password\" placeholder=\"Create a password\" required><div class=\"invalid-feedback\">Password is required.</div></div><div class=\"col-12\"><label for=\"confirmPassword\" class=\"form-label\">Confirm Password</label> <input type=\"password\" name=\"confirm_password\" class=\"form-control rounded-3\" id=\"confirmPassword\" placeholder=\"Repeat your password\" required><div class=\"invalid-feedback\" id=\"confirmPasswordFeedback\">Please confirm your password.</div></div><!-- Buton și link login --><div class=\"col-12 mt-4\"><button type=\"submit\" class=\"btn btn-success w-100 py-2 fs-5 rounded-3\">Register</button></div><div class=\"col-12 text-center mt-3\"><small>Ai deja cont? <a href=\"/login\">Log in</a></small></div></div></form></div></div></div></div></div><script>\n    function validateRegisterForm() {\n      const form = document.querySelector(\"#registerForm\");\n      const password = document.getElementById(\"password\");\n      const confirm = document.getElementById(\"confirmPassword\");\n      const confirmFeedback = document.getElementById(\"confirmPasswordFeedback\");\n      \n      // Verificăm mai întâi validitatea standard a formularului\n      let valid = form.checkValidity();\n      \n      // Verificăm dacă parolele coincid\n      if (password.value !== confirm.value) {\n        confirm.setCustomValidity(\"Parolele nu coincid\");\n        confirmFeedback.textContent = \"Parolele nu coincid\";\n        valid = false;\n      } else {\n        confirm.setCustomValidity(\"\"); // resetează dacă e ok\n      }\n      \n      // Adăugăm clasa was-validated pentru a afișa mesajele de eroare\n      form.classList.add(\"was-validated\");\n      return valid;\n    }\n    \n    function submitRegisterForm(event) {\n      event.preventDefault();\n      \n      // Validăm formularul\n      if (!validateRegisterForm()) {\n        return false;\n      }\n      \n      // Pregătim datele pentru JSON\n      const formData = {\n        firstName: document.getElementById(\"firstName\").value,\n        lastName: document.getElementById(\"lastName\").value,\n        email: document.getElementById(\"email\").value,\n        password: document.getElementById(\"password\").value\n      };\n      \n      // Trimitem datele ca JSON\n      fetch('/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(formData),\n        credentials: 'same-origin'\n      })\n      .then(response => {\n        if (response.redirected) {\n          // Urmărește redirectul\n          window.location.href = response.url;\n        } else if (!response.ok) {\n          // Procesează răspunsul ca text pentru mesajul de eroare\n          return response.text().then(text => {\n            document.getElementById(\"register-error\").innerHTML = \n              `<div class=\"alert alert-danger\">${text}</div>`;\n          });\n        }\n      })\n      .catch(error => {\n        document.getElementById(\"register-error\").innerHTML = \n          '<div class=\"alert alert-danger\">A network error occurred. Please try again.</div>';\n      });\n      \n      return false;\n    }\n    </script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
